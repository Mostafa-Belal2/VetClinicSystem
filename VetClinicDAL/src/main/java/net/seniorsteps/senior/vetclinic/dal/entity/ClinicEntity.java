package net.seniorsteps.senior.vetclinic.dal.entity;
// Generated Jul 16, 2020 5:35:22 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * ClinicEntity generated by hbm2java
 */
@Entity
@Table(name="clinic"
    ,catalog="vet_clinic"
    , uniqueConstraints = {@UniqueConstraint(columnNames="phone"), @UniqueConstraint(columnNames="email")} 
)
public class ClinicEntity  implements java.io.Serializable {


     private Integer id;
     private String name;
     private String address;
     private String phone;
     private String workingDays;
     private Date openAt;
     private Date closeAt;
     private String email;
     private String url;
     private Set<VisitEntity> visits = new HashSet<VisitEntity>(0);
     private Set<DoctorEntity> doctors = new HashSet<DoctorEntity>(0);

    public ClinicEntity() {
    }

	
    public ClinicEntity(String name, String address, String phone, Date openAt, Date closeAt, String email) {
        this.name = name;
        this.address = address;
        this.phone = phone;
        this.openAt = openAt;
        this.closeAt = closeAt;
        this.email = email;
    }
    public ClinicEntity(String name, String address, String phone, String workingDays, Date openAt, Date closeAt, String email, String url, Set<VisitEntity> visits, Set<DoctorEntity> doctors) {
       this.name = name;
       this.address = address;
       this.phone = phone;
       this.workingDays = workingDays;
       this.openAt = openAt;
       this.closeAt = closeAt;
       this.email = email;
       this.url = url;
       this.visits = visits;
       this.doctors = doctors;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="address", nullable=false, length=100)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="phone", unique=true, nullable=false, length=20)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="working days", length=4)
    public String getWorkingDays() {
        return this.workingDays;
    }
    
    public void setWorkingDays(String workingDays) {
        this.workingDays = workingDays;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="open_at", nullable=false, length=8)
    public Date getOpenAt() {
        return this.openAt;
    }
    
    public void setOpenAt(Date openAt) {
        this.openAt = openAt;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="close_at", nullable=false, length=8)
    public Date getCloseAt() {
        return this.closeAt;
    }
    
    public void setCloseAt(Date closeAt) {
        this.closeAt = closeAt;
    }

    
    @Column(name="email", unique=true, nullable=false, length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="url", length=200)
    public String getUrl() {
        return this.url;
    }
    
    public void setUrl(String url) {
        this.url = url;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="clinic")
    public Set<VisitEntity> getVisits() {
        return this.visits;
    }
    
    public void setVisits(Set<VisitEntity> visits) {
        this.visits = visits;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="clinic")
    public Set<DoctorEntity> getDoctors() {
        return this.doctors;
    }
    
    public void setDoctors(Set<DoctorEntity> doctors) {
        this.doctors = doctors;
    }




}


